hydra:
  run:
    dir: outputs/${base.data}-${base.model}-${snn-train.method}${snn-train.T}T${snn-train.L}L-TET${snn-train.TET}-TEBN${snn-train.TEBN}-${snn-train.ann_layers}-${snn-train.regularizer}-alpha${snn-train.alpha}-seed${base.seed}-epochs${base.epochs}/
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    root: null
    disable_existing_loggers: false
  job_logging:
    version: 1
    root: null
    disable_existing_loggers: false
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=RUN
    task:
    - base.batch_size=128
    - base.epochs=300
    - base.gpu_id='1'
    - base.seed=1200
    - base.port='11152'
    - base.data='cifar10'
    - base.model='resnet18'
    - base.dataset_path='datasets'
    - snn-train.method='snn'
    - snn-train.ann_layers='none'
    - snn-train.snn_layers='baselayer'
    - snn-train.regularizer='rcs'
    - snn-train.loss=tet
    - snn-train.multistep=True
    - snn-train.add_time_dim=True
    - snn-train.T=2
    - snn-train.alpha=0.00
  job:
    name: training
    chdir: null
    override_dirname: base.batch_size=128,base.data='cifar10',base.dataset_path='datasets',base.epochs=300,base.gpu_id='1',base.model='resnet18',base.port='11152',base.seed=1200,snn-train.T=2,snn-train.add_time_dim=True,snn-train.alpha=0.00,snn-train.ann_layers='none',snn-train.loss=tet,snn-train.method='snn',snn-train.multistep=True,snn-train.regularizer='rcs',snn-train.snn_layers='baselayer'
    id: ???
    num: ???
    config_name: default
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /LOCAL2/dengyu/MySNN/SNN-Regularisation-Cutoff
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /LOCAL2/dengyu/MySNN/SNN-Regularisation-Cutoff/configs
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: /LOCAL2/dengyu/MySNN/SNN-Regularisation-Cutoff/outputs/cifar10-resnet18-snn2T4L-TETFalse-TEBNFalse-none-rcs-alpha0.0-seed1200-epochs300
    choices:
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: none
      hydra/hydra_logging: none
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
